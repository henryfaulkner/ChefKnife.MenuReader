
name: $(SourceBranchName)-menu-reader-$(Date:yyyyMMdd).$(Rev:r)

trigger:
  branches:
    include:
    - main
    - release/*
    - deploy
pr: none

pool:
  vmImage: ubuntu-latest

variables:
  container-registry: chefknife.azurecr.io
  container-registry-service-connection: 'AzureContainerRegistrySC'
  api-container-name: chefknife-dev-menureader-webapi
  api-container-tag: $(Build.BuildNumber)
  api-container: $(container-registry)/$(api-container-name):$(api-container-tag)

stages:
- stage: BuildAndPublish
  displayName: Build and Publish ChefKnife.MenuReader
  jobs:
  - job: BuildAndPublish
    displayName: Build and Publish ChefKnife.MenuReader

    variables:
      buildConfiguration: 'Release'

    steps:
    - checkout: self
      persistCredentials: true # Required for git tagging 

    # Build and push Api container
    - script: | 
        docker build -f src/ChefKnife.MenuReader.WebAPI/Dockerfile \
        -t $(api-container) .

    - task: Docker@2
      inputs:
        containerRegistry: '$(container-registry-service-connection)'
        repository: '$(api-container-name)'
        command: 'push'
        tags: '$(api-container-tag)'

- stage: DeployDev
  displayName: Deploy Development
  jobs: 
  - deployment: DeployDev
    displayName: Deploy ChefKnife.MenuReader to Dev
    environment: 'Dev'
    variables:
    - group: 'Dev'
    strategy:
      runOnce:   
        deploy:
          steps:
          - checkout: self
            persistCredentials: true # Required for git tagging 

          - task: Docker@2
            inputs:
              containerRegistry: '$(container-registry-service-connection)'
              command: 'login'

          # Deploy API Container App
          - task: AzureContainerApps@1
            displayName: "Deploy API Container App"
            inputs:
              azureSubscription: 'ChefKnifeStudiosSC'
              imageToDeploy: '$(api-container)'
              containerAppName: 'menureader-dev-api'
              resourceGroup: 'menureader-dev-rg'
              containerAppEnvironment: 'menureader-dev-ca-env'
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=dev

          # Copy swagger.json from docker
          - script: |
              id=$(docker create $(api-container))
              docker cp $id:/app/swagger.json ./swagger.json
              docker rm -v $id
            displayName: 'Get swagger.json'
